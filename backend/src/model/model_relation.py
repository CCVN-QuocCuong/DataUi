from src.shared.db_orm_connection import BaseModel, BaseModelNoPK
from peewee import *
    
    
class ttcl_coc(BaseModel):
    cocid = BigAutoField(primary_key=True)
    created = DateTimeField()
    createdby = CharField()
    lastmodified = DateTimeField()
    lastmodifiedby = CharField()
    jobno = CharField()
    jobphase = CharField()
    jobtask = CharField()
    companyid = IntegerField()
    labquoteno = CharField()
    primarycontact = CharField()
    submitter = CharField()
    ttcontactphone = CharField()
    ttemailaddress = CharField()
    labid = IntegerField()
    priority = CharField()
    comment = CharField()
    siteid = CharField()
    siteaddress = CharField()
    labreference = CharField()
    objective = CharField()
    statuscode = CharField()
    version = IntegerField()
    deleted = BooleanField()
    statusid = IntegerField()
    phasename = CharField()
    jobname = CharField()
    taskname = CharField()
    sampletype = CharField()
    labaddress = CharField()
    address = CharField()
    emailother = CharField()
    note = CharField()
class clsurvey(BaseModel):
    surveyid = CharField(primary_key=True)
    confidential = IntegerField()
    jobnumber = CharField()
    objective = CharField()
    objectiveother = CharField()
    siteid = CharField()
    siteaddress = CharField()
    jobphase = CharField()
    jobtask = CharField()
    projectname = CharField()
    jobphasename = CharField()
    jobtaskname = CharField()
    created = DateTimeField()
    createdby = CharField()
    lastmodified = DateTimeField()
    lastmodifiedby = CharField()
class clsurveypoint(BaseModel):
    pointid = CharField(primary_key=True)
    surveyid = ForeignKeyField(clsurvey, column_name='surveyid', null=True)
    pointname = CharField()
    collectiondate = DateTimeField()
    staff = CharField()
    sampletype = CharField()
    sampletypeother = CharField()
    samplemethod = CharField()
    samplemethodother = CharField()
    comments = CharField()
    created = DateTimeField()
    createdby = CharField()
    lastmodified = DateTimeField()
    lastmodifiedby = CharField()
class clsurveysample(BaseModel):
    sampleid = CharField(primary_key=True)
    pointid = ForeignKeyField(clsurveypoint, column_name='pointid', null=True)
    created = DateTimeField()
    createdby = CharField()
    lastmodified = DateTimeField()
    lastmodifiedby = CharField()
    fromdepth = FloatField()
    todepth = FloatField()
    comment = CharField()
    samplematerialtype = CharField()
    collectiondatetime = DateTimeField()
class clsurveysamplecontainer(BaseModelNoPK):
    sampleid = ForeignKeyField(
        clsurveysample, column_name='sampleid', null=True)
    labcode = CharField()
    containertype = CharField()
    isduplicate = BooleanField()
    duplicatename = CharField()
    isgeneratecoc = BooleanField()
    objectiveother = CharField()
    sampleconcatname = CharField()

class ttcl_pointsampletest(BaseModel):
    samplebarcodeid = AutoField(primary_key=True)
    arcgissampleid = CharField()
    barcode = CharField()
    testidlist = CharField()
    teststringlist = CharField()
    cocprepared = BooleanField()
class ttcl_cocdetails(BaseModel):
    cocdetailid = AutoField(primary_key=True)
    cocid = ForeignKeyField(ttcl_coc, column_name='cocid')
    samplebarcodeid = ForeignKeyField(ttcl_pointsampletest, column_name='samplebarcodeid')
    samplecombinename = CharField()
    depthrange = CharField()

class ttcl_testtype(BaseModel):
    testid = AutoField(primary_key=True)
    testcode = CharField()
    testcategory = CharField()
    testtypename = CharField()
    active = BooleanField()
    parenttestid = IntegerField()
class ttcl_code(BaseModel):
    codeid = AutoField(primary_key=True)
    codetypecode = CharField()
    codename = CharField()
    description = CharField()
    address = CharField()
    isactive = BooleanField()
    sequence = IntegerField()
class ttcl_businesscriteria(BaseModel):
    businesscriteriacode = CharField(primary_key=True)
    criterianame = CharField()
    notecode = CharField()
    sequence = IntegerField()
    active = BooleanField()
    style = CharField()
    stylenote = CharField()
    guideline = CharField()
class ttcl_businesscriteriaregion(BaseModel):
    businesscriteriaregionid = AutoField(primary_key=True)
    businesscriteriacode = CharField()
    regioncode = CharField()
    defaultstyle = CharField()
    sequence = IntegerField()
    srt = IntegerField()
class ttcl_businesscriteriatest_chcbg_complex(BaseModelNoPK):
    testcode = CharField()
    soiltype = CharField()
    region = CharField()
    value = CharField()
class ttcl_businesscriteriatest_htn_complex(BaseModelNoPK):
    businesscriteriacode = CharField()
    testcode = CharField()
    sgvsoiltype = CharField()
    sgvsoilage = CharField()
    value = CharField()
class ttcl_coc_versions(BaseModel):
    id = AutoField(primary_key=True)
    cocid = ForeignKeyField(ttcl_coc, column_name='cocid')
    version = IntegerField()
    created = DateTimeField()
    note = CharField()
    friendlyid = CharField()
    
class ttcl_labfileheader(BaseModel):
    fileid = AutoField(primary_key=True)
    filename = CharField()
    fileurl = CharField()
    createdon = DateTimeField()
    labname = CharField()
    labjobnumber = CharField()
    cocid = CharField()
    cocidmapping = CharField()
    ttjobno = CharField()
    dateregistered = DateTimeField()
    status= CharField()
    labresultid = IntegerField()
    filetype = CharField()
    uploadby = CharField()
    
class ttcl_labfiledetail(BaseModel):
    labresultid = AutoField(primary_key=True)
    fileid = IntegerField()
    labsamplename = CharField()
    labcategoryname = CharField()
    labcategorycode = CharField()
    labtestname = CharField()
    labtestcode = CharField()
    unit = CharField()
    result = CharField()
    resultasnumeric = CharField()
    resultmathoperation = CharField()
    asbestosdetected = CharField()
    labsampletype = CharField()
    

class ttcl_labsample_mapping(BaseModel):
    labsamplename = CharField()
    barcode = CharField()
    cocid = CharField()
    class Meta:
      primary_key=CompositeKey('barcode', 'cocid')

class ttcl_cocbusinesscriteria(BaseModel):
    cocbusinesscriteriaid = BigAutoField(primary_key=True)
    header = CharField()
    cocid  = ForeignKeyField(
        ttcl_coc, column_name='cocid', null=True)
    businesscriteriacode = CharField()
    formattype = CharField()
    soiltypecode = CharField()
    depthcode  = CharField()
    groundwaterdepthcode = CharField()
    style = CharField()
    regioncode = CharField()
    sgvsoiltype  = CharField()
    sgvsoilage = CharField()
    sgvgainsize = CharField()
    chcbgsoiltype  = CharField()
    chcbgregion  = CharField()
    chcisurban = BooleanField()

class ttcl_filebusinesscriteria(BaseModel):
    filebusinesscriteriaid = BigAutoField(primary_key=True)
    header = CharField()
    fileid = IntegerField()
    businesscriteriacode = CharField()
    formattype = CharField()
    soiltypecode = CharField()
    depthcode  = CharField()
    groundwaterdepthcode = CharField()
    style = CharField()
    regioncode = CharField()
    sgvsoiltype  = CharField()
    sgvsoilage = CharField()
    sgvgainsize = CharField()
    chcbgsoiltype  = CharField()
    chcbgregion  = CharField()
    chcisurban = BooleanField()

class ttcl_sampleform(BaseModel):
    formid = AutoField(primary_key=True)
    fileid = IntegerField()
    companyid = IntegerField()
    labid = IntegerField()
    jobno = CharField()
    labquoteno = CharField()
    primarycontact = CharField()
    ttcontactphone = CharField()
    ttemailaddress = CharField()
    siteid = CharField()
    siteaddress = CharField()
    objective = CharField()
    labaddress = CharField()
    address = CharField()
    comment = CharField()
    createdby = CharField()
    lastmodifiedby = CharField()
    created = DateTimeField()
    lastmodified = DateTimeField()
    
class ttcl_notification(BaseModel):
    ttcl_notificationid = AutoField(primary_key=True)
    cocid = IntegerField()
    fileid = IntegerField()
    # uploaded: upload document success
    # transformed: mapping and transform document success
    # exported: export report success 
    status = CharField()
    message = CharField()
    isread = BooleanField()
    created = DateTimeField() 
    lastmodified = DateTimeField()
    